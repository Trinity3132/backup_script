#!/bin/bash
#
# Author: trinity3
# Date: October 2, 2025
# Description: Automated Arch + DWM setup using personal backup repo
#

set -o errexit
set -o nounset
set -o pipefail
shopt -s nullglob

# ───────────────────────────────────────────────────────────────
# 🎨 Colors
# ───────────────────────────────────────────────────────────────
BLUE=$'\033[1;34m'
GREEN=$'\033[1;32m'
YELLOW=$'\033[1;33m'
RED=$'\033[1;31m'
NC=$'\033[0m'

# ───────────────────────────────────────────────────────────────
# 🚀 Intro
# ───────────────────────────────────────────────────────────────
echo -e "${BLUE}󱓧 Welcome $USER. Starting your Arch + DWM setup...${NC}"
read -rp "Would you like to proceed? (y/N): " answer
[[ "${answer,,}" =~ ^(y|yes)$ ]] || { echo -e "${RED} Cancelled.${NC}"; exit 1; }

# ───────────────────────────────────────────────────────────────
# 🧩 System Update
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE}󰚰 Updating system...${NC}"
sudo pacman -Syu --noconfirm
echo -e "${GREEN}✅ System updated.${NC}"

# ───────────────────────────────────────────────────────────────
# 🔑 Enable wheel group in sudoers
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE}󰐣 Enabling wheel group in sudoers...${NC}"
if sudo EDITOR="sed -i 's/^# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/'" visudo; then
  echo -e "${GREEN}✅ Wheel group enabled.${NC}"
else
  echo -e "${YELLOW}⚠️  Skipped sudoers modification.${NC}"
fi

# ───────────────────────────────────────────────────────────────
# 🔐 Install & Enable AppArmor + Firewalld
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE}🔐 Installing AppArmor, Firewalld, and git...${NC}"
sudo pacman -S --needed --noconfirm apparmor firewalld git

# Enable services
sudo systemctl enable --now apparmor.service
sudo systemctl enable --now firewalld.service

# Basic firewall setup
echo -e "\n${BLUE}🌐 Configuring Firewalld...${NC}"
sudo firewall-cmd --set-default-zone=public
sudo firewall-cmd --permanent --zone=public --add-service=dhcpv6-client
sudo firewall-cmd --permanent --zone=public --add-service=ssh
sudo firewall-cmd --reload

echo -e "${GREEN}✅ AppArmor and Firewalld installed, enabled, and configured.${NC}"

# ───────────────────────────────────────────────────────────────
# 🧩 Update GRUB for AppArmor & LSM stacking
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE}󰌽 Updating GRUB with AppArmor & LSM stacking...${NC}"
if grep -q '^GRUB_CMDLINE_LINUX_DEFAULT=' /etc/default/grub; then
  sudo sed -i \
    's|^GRUB_CMDLINE_LINUX_DEFAULT=.*|GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet lsm=landlock,lockdown,yama,integrity,apparmor,bpf"|' \
    /etc/default/grub
else
  echo 'GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet lsm=landlock,lockdown,yama,integrity,apparmor,bpf"' \
    | sudo tee -a /etc/default/grub >/dev/null
fi
sudo grub-mkconfig -o /boot/grub/grub.cfg
echo -e "${GREEN}✅ GRUB updated.${NC}"

# ───────────────────────────────────────────────────────────────
#  Install yay (AUR helper)
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE} Installing yay...${NC}"
sudo pacman -S --needed --noconfirm base-devel gh vim neovim
if [[ ! -d /tmp/yay ]]; then
  git clone https://aur.archlinux.org/yay.git /tmp/yay
fi
cd /tmp/yay && makepkg -si --noconfirm
echo -e "${GREEN}✅ yay installed.${NC}"

# ───────────────────────────────────────────────────────────────
#  Clone backup repo
# ───────────────────────────────────────────────────────────────
REPO_URL="https://github.com/Trinity3132/backUp_repo.git"
CLONE_DIR="$HOME/backup"

echo -e "\n${BLUE} Cloning backup repo...${NC}"
if [[ ! -d "$CLONE_DIR" ]]; then
  git clone "$REPO_URL" "$CLONE_DIR"
else
  cd "$CLONE_DIR" && git pull
fi

# ───────────────────────────────────────────────────────────────
#  Copy configs, scripts, and dotfiles
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE} Copying configurations and scripts...${NC}"

mkdir -p "$HOME/.local/bin"
cp -r "$CLONE_DIR/.local/bin/scripts" "$HOME/.local/bin/"
cp -r "$CLONE_DIR/.config" "$HOME/"
cp -r "$CLONE_DIR/.screenlayout" "$HOME/"

for file in .bash_profile .bashrc .zprofile .zshrc .xinitrc; do
  [[ -f "$CLONE_DIR/$file" ]] && cp "$CLONE_DIR/$file" "$HOME/"
done

echo -e "${GREEN}✅ Configurations and scripts installed.${NC}"

# ───────────────────────────────────────────────────────────────
# 🧱 Build dwm, st, and dwmblocks
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE}🧱 Building dwm, st, and dwmblocks...${NC}"
cd "$CLONE_DIR/.config/dwm" && sudo make clean install
cd "$CLONE_DIR/.config/st" && sudo make clean install
cd "$CLONE_DIR/.config/dwmblocks" && sudo make clean install
echo -e "${GREEN}✅ Built dwm, st, and dwmblocks.${NC}"

# ───────────────────────────────────────────────────────────────
# 📦 Install Pacman packages
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE}📦 Installing Pacman packages...${NC}"
PACMAN_PKGS=(
  alacritty alsa-utils amd-ucode arandr atool base base-devel bat btop btrfs-progs
  chromium clamav clang dunst eza fastfetch fd feh ffmpegthumbnailer firefox-developer-edition
  flatpak fzf git github-cli go grub gst-plugin-pipewire jmtpfs jq lazygit lf
  lib32-mesa lib32-vulkan-radeon libnotify libpulse libreoffice-fresh libva-utils linux-firmware
  linux-zen lynx man-db mediainfo mesa-utils mpc mpd mpv nano neovim networkmanager nodejs
  noto-fonts noto-fonts-emoji npm nsxiv numlockx openssh pavucontrol perl-file-mimeinfo pipewire
  pipewire-alsa pipewire-jack pipewire-pulse playerctl plocate ripgrep rmpc
)
sudo pacman -S --needed --noconfirm "${PACMAN_PKGS[@]}"
echo -e "${GREEN}✅ Pacman packages installed.${NC}"

# ───────────────────────────────────────────────────────────────
# 📦 Install AUR packages
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE}📦 Installing AUR packages...${NC}"
AUR_PKGS=(
  jmtpfs mullvad-browser-bin nerd-fonts-sf-mono papirus-icon-theme-git paru paru-debug
  postman-bin simple-mtpfs spotify yay yay-debug
)
yay -S --needed --noconfirm "${AUR_PKGS[@]}"
echo -e "${GREEN}✅ AUR packages installed.${NC}"

# ───────────────────────────────────────────────────────────────
# 🎨 Install GRUB themes
# ───────────────────────────────────────────────────────────────
echo -e "\n${BLUE}🎨 Installing GRUB bootloader themes...${NC}"
cd "$CLONE_DIR/.config/voidrice/Top-5-Bootloader-Themes"
chmod +x install.sh && sudo ./install.sh
echo -e "${GREEN}✅ GRUB themes installed.${NC}"

# ───────────────────────────────────────────────────────────────
# 🔁 Final prompt
# ───────────────────────────────────────────────────────────────
echo -e "\n${GREEN}✅ Setup complete! Your system is ready.${NC}"
echo -e "Backup repo kept at: ${YELLOW}$CLONE_DIR${NC}"

read -rp "Would you like to reboot now to apply all changes? (y/N): " reboot_ans
if [[ "${reboot_ans,,}" =~ ^(y|yes)$ ]]; then
  echo -e "${BLUE}🔄 Rebooting...${NC}"
  sudo reboot
else
  echo -e "${YELLOW}⚠️  Remember to reboot later for AppArmor and GRUB changes to take effect.${NC}"
fi

