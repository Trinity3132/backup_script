#!/bin/bash

# Author: trinity3
# Date Written: October 2, 2025

# Description: This script is used to install my own system on another device or incase my system device will be broken.

# Safer script defaults
set -o errexit  # Exit on command failure
set -o nounset  # Exit on unset variables
set -o pipefail # Catch pipe failures
shopt -s nullglob # Prevent globbing of empty matches

# Color codes
BLUE=$'\033[1;34m'
GREEN=$'\033[1;32m'
YELLOW=$'\033[1;33m'
RED=$'\033[1;31m'
NC=$'\033[0m' # No Color

echo "${BLUE}󱓧 Welcome $USER. We will run this script at your will for installation of your system...${NC}"
read -rp "Would you like to proceed? (y/N): " answer

# If statement means “If the user’s answer (lowercased) is not y or yes, then print ‘❌ Cancelled.’ and exit the script with code 1.”
[[ "${answer,,}" =~ ^(y|yes)$ ]] || { echo -e " Cancelled."; exit 1; }

### 󰚰 System Update
echo -e "\n${BLUE}󰚰 Updating system...${NC}"
if sudo pacman -Syu --noconfirm; then
    echo -e "${GREEN}✅ Update complete.${NC}"
else
    echo -e "${RED}❌ Failed to update. Consider manual intervention.${NC}"
    exit 1
fi

### 󰐣 Enable wheel group for sudo
echo -e "\n${BLUE}󰐣 Enabling wheel group in sudoers...${NC}"
if sudo EDITOR="sed -i 's/^# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/'" visudo; then
    echo -e "${GREEN}✅ Wheel group enabled successfully.${NC}"
else
    echo -e "${RED}❌ Failed to modify sudoers. Please check manually with 'sudo visudo'.${NC}"
    exit 1
fi

### 󰌽 Update GRUB to enable AppArmor with LSM stacking
echo -e "\n${BLUE}󰌽 Updating GRUB to enable AppArmor with LSM stacking...${NC}"
if grep -q '^GRUB_CMDLINE_LINUX_DEFAULT=' /etc/default/grub; then
    if sudo sed -i 's|^GRUB_CMDLINE_LINUX_DEFAULT=.*|GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet lsm=landlock,lockdown,yama,integrity,apparmor,bpf"|' /etc/default/grub; then
        echo -e "${GREEN}✅ Updated GRUB_CMDLINE_LINUX_DEFAULT line.${NC}"
    else
        echo -e "${RED}❌ Failed to update /etc/default/grub.${NC}"
        exit 1
    fi
else
    echo 'GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet lsm=landlock,lockdown,yama,integrity,apparmor,bpf"' | sudo tee -a /etc/default/grub
    echo -e "${YELLOW}⚠️  GRUB_CMDLINE_LINUX_DEFAULT line not found, appended new one.${NC}"
fi

if sudo grub-mkconfig -o /boot/grub/grub.cfg; then
    echo -e "${GREEN}✅ GRUB configuration updated.${NC}"
else
    echo -e "${RED}❌ Failed to regenerate GRUB configuration.${NC}"
    exit 1
fi

###  Install yay (AUR helper)
echo -e "\n${BLUE} Installing yay (AUR helper)...${NC}"

# Ensure required tools are installed
if sudo pacman -S --needed --noconfirm git base-devel gh vim neovim; then
    echo -e "${GREEN}✅ Base tools installed.${NC}"
else
    echo -e "${RED}❌ Failed to install base tools.${NC}"
    exit 1
fi

# Clone yay if not already present
if [[ ! -d /tmp/yay ]]; then
    if git clone https://aur.archlinux.org/yay.git /tmp/yay; then
        echo -e "${GREEN}✅ Cloned yay repository.${NC}"
    else
        echo -e "${RED}❌ Failed to clone yay repository.${NC}"
        exit 1
    fi
else
    echo -e "${YELLOW}⚠️  yay repo already exists in /tmp/yay, skipping clone.${NC}"
fi

# Build and install yay
cd /tmp/yay
if makepkg -si --noconfirm; then
    echo -e "${GREEN}✅ yay installed successfully.${NC}"
else
    echo -e "${RED}❌ Failed to build/install yay.${NC}"
    exit 1
fi

set -e

REPO_URL="https://github.com/Trinity3132/backUp_repo.git"
CLONE_DIR="$HOME/backup"

echo ">>> Cloning backup repo..."
if [ ! -d "$CLONE_DIR" ]; then
    git clone "$REPO_URL" "$CLONE_DIR"
else
    echo ">>> Repo already cloned. Pulling latest changes..."
    cd "$CLONE_DIR"
    git pull
fi

echo ">>> Installing scripts to ~/.local/bin/scripts..."
mkdir -p "$HOME/.local/bin"
cp -r "$CLONE_DIR/.local/bin/scripts" "$HOME/.local/bin/"

echo ">>> Installing .config files..."
cp -r "$CLONE_DIR/.config" "$HOME/"

echo ">>> Copying .screenlayout directory..."
if [ -d "$CLONE_DIR/.screenlayout" ]; then
    cp -r "$CLONE_DIR/.screenlayout" "$HOME/"
    echo "    -> Installed .screenlayout directory"
else
    echo "    -> Skipped .screenlayout (not found in repo)"
fi

echo ">>> Copying dotfiles..."
for file in .bash_profile .bashrc .zprofile .zshrc .xinitrc; do
    if [ -f "$CLONE_DIR/$file" ]; then
        cp "$CLONE_DIR/$file" "$HOME/"
        echo "    -> Installed $file"
    else
        echo "    -> Skipped $file (not found in repo)"
    fi
done

echo ">>> Building dwm..."
cd "$CLONE_DIR/.config/dwm"
sudo make clean install

echo ">>> Building st..."
cd "$CLONE_DIR/.config/st"
sudo make clean install

echo ">>> Building dwmblocks..."
cd "$CLONE_DIR/.config/dwmblocks"
sudo make clean install

echo ">>> Installing papirus icon theme..."
cd "$CLONE_DIR/.config/voidrice/papirus-icon-theme-git"
makepkg -si --noconfirm

echo ">>> Installing extra packages (rofi, lf)..."
sudo pacman -S --needed --noconfirm rofi lf

echo ">>> Installing GRUB bootloader themes..."
cd "$CLONE_DIR/.config/voidrice/Top-5-Bootloader-Themes"
chmod +x install.sh
sudo ./install.sh

echo ">>> Done! Repo is kept at $CLONE_DIR"

